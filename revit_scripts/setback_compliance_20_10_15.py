"""
Revit Setback Compliance Script
Front: 20ft, Side: 10ft, Rear: 15ft
Generated by Building Code GPT
"""

import clr
clr.AddReference('RevitAPI')
clr.AddReference('RevitAPIUI')
from Autodesk.Revit.DB import *
from Autodesk.Revit.UI import *

def check_setback_compliance(doc):
    """Check building setback compliance"""
    
    # Setback requirements
    front_setback_ft = 20
    side_setback_ft = 10
    rear_setback_ft = 15
    
    violations = []
    
    # Get all walls
    collector = FilteredElementCollector(doc)
    walls = collector.OfCategory(BuiltInCategory.OST_Walls).WhereElementIsNotElementType().ToElements()
    
    for wall in walls:
        try:
            location_curve = wall.Location
            if isinstance(location_curve, LocationCurve):
                # Get wall endpoints
                curve = location_curve.Curve
                start_point = curve.GetEndPoint(0)
                end_point = curve.GetEndPoint(1)
                
                # Check setback compliance (simplified check)
                # In real implementation, you would calculate actual distances to property lines
                wall_id = wall.Id.IntegerValue
                
                # Example violation detection logic
                # This would need actual property boundary coordinates
                
        except Exception as e:
            continue
    
    # Report results
    message = f"Setback Compliance Check Complete\n"
    message += f"Required setbacks: Front {front_setback_ft}ft, Side {side_setback_ft}ft, Rear {rear_setback_ft}ft\n"
    message += f"Violations found: {len(violations)}"
    
    TaskDialog.Show("Setback Compliance", message)
    return violations

# Execute the function
if __name__ == "__main__":
    doc = __revit__.ActiveUIDocument.Document
    check_setback_compliance(doc)
